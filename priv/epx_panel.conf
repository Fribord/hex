%% -*- erlang -*-
%% 
%%  "pure" hex/epx demo
%%
{transmit, 1,
 {hex_can, []},
 {[], [], [], []}}.

%% general can input
{event, 1,
 {hex_can, []},
 {id, chan, type, value}}.

%% FIRST ROW  Y=10
{event, b1,
 {hex_epx, [{id,b1},{type,button},
	    {x,26},{y,10},{width,64},{height,64},
	    {fill,solid},{color,16#ffff0000},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"F1"}]},
 {{xcobid, pdo1_tx, 16#20002}, 1, digital, value} }.

{event, b2,
 {hex_epx, [{id,b2},{type,button},
	    {x,94},{y,10},{width,64},{height,64},
	    {fill,solid},{color,16#ffff0000},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"F2"}]},
 {{xcobid, pdo1_tx, 16#20002}, 2, digital, value} }.

{event, b3,
 {hex_epx, [{id,b3},{type,button},
	    {x,162},{y,10},{width,64},{height,64},
	    {fill,solid},{color,16#ffff0000},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"F3"}]},
 {{xcobid, pdo1_tx, 16#20002}, 3, digital, value} }.

{event, b4,
 {hex_epx, [{id,b4},{type,button},
	    {x,230},{y,10},{width,64},{height,64},
	    {fill,solid},{color,16#ffff0000},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"F4"}]},
 {{xcobid, pdo1_tx, 16#20002}, 4, digital, value} }.

%% SECOND ROW  Y=78
{event, b5,
 {hex_epx, [{id,b5},{type,button},
	    {x,26},{y,78},{width,64},{height,64},
	    {fill,solid},{color,16#ff00ff00},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"ALRM"}]},
 {{xcobid, pdo1_tx, 16#20002}, 5, digital, value} }.

{event, b6,
 {hex_epx, [{id,b6},{type,button},
	    {x,94},{y,78},{width,64},{height,64},
	    {fill,solid},{color,16#ff00ff00},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"F6"}]},
 {{xcobid, pdo1_tx, 16#20002}, 6, digital, value} }.

{event, b7,
 {hex_epx, [{id,b7},{type,button},
	    {x,162},{y,78},{width,64},{height,64},
	    {fill,solid},{color,16#ff0000ff},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"BARK"}]},
 {{xcobid, pdo1_tx, 16#20002}, 17, digital, value} }.

{event, b8,
 {hex_epx, [{id,b8},{type,button},
	    {x,230},{y,78},{width,64},{height,64},
	    {fill,solid},{color,16#ff0000ff},
	    {font,[{name,"Arial"},{size,12}]},
	    {text,"HORN"}]},
 {{xcobid, pdo1_tx, 16#20002}, 8, digital, value} }.

%% slider (demo)
{event, s1, 
 {hex_epx, [{id,s1},{type,slider},
	    {x,26},{y,202},{width,268},{height,32},
	    {color,16#ff006600},{min,0},{max,30}]},
 {{xcobid, pdo1_tx, 16#20002}, 9, analog, value} }.

%% "dummy" input & output rules (remote control id=1)

{input,can11,
 {{xcobid, pdo1_tx, 16#20001}, 11, digital, []}, 
 [{springback,false},{output,[{channel,1}]}]}.

{input,can12,
 {{xcobid, pdo1_tx, 16#20001}, 12, digital, []}, 
 [{springback,false},{output,[{channel,2}]}]}.

{input,can13,
 {{xcobid, pdo1_tx, 16#20001}, 13, digital, []}, 
 [{springback,false},{output,[{channel,3}]}]}.

{input,can14,
 {{xcobid, pdo1_tx, 16#261013}, 8, digital, []}, 
 [{springback,false},{output,[{channel,7},{target,f1}]}]}.

%% input remote control id=2 and epx panel
{input,1,
 {{xcobid, pdo1_tx, 16#20002}, 1, digital, []}, 
 [{springback,true},
  {output,[{channel,1}]},
  {output,[{channel,7},{target,f1}]}
 ]}.

{input,2,
 {{xcobid, pdo1_tx, 16#20002}, 2, digital, []},
 [{springback,true},
  {output,[{channel,2}]},
  {output,[{channel,7},{target,f2}]}
 ]}.

{input,3,
 {{xcobid, pdo1_tx, 16#20002}, 3, digital, []},
 [{springback,true},
  {output,[{channel,3}]},
  {output,[{channel,7},{target,f3}]}
 ]}.

{input,4,
 {{xcobid, pdo1_tx, 16#20002}, 4, digital, []}, 
 [{springback,true},
  {output,[{channel,4}]},
  {output,[{channel,7},{target,f4}]}
 ]}.

{input,5,
 {{xcobid, pdo1_tx, 16#20002}, 5, digital, []},
 [{output,[{channel,5}]}]}.

{input,6,
 {{xcobid, pdo1_tx, 16#20002}, 6, digital, []},
 [{output,[{channel,6}]}]}.

{input,7,
 {{xcobid, pdo1_tx, 16#20002}, 7, digital, []},
 [{springback,false},{output,[{channel,7}]}]}.

{input,17,
 {{xcobid, pdo1_tx, 16#20002}, 17, digital, []},
 [{springback,false},{output,[{channel,17}]}]}.

{input,8,
 {{xcobid, pdo1_tx, 16#20002}, 8, digital, []}, 
 [{output,[{channel,8}]},{output,[{channel,13}]}]}.

{input,9,
 {{xcobid, pdo1_tx, 16#20002}, 9, analog, []}, 
 [{output,[{channel,10},{target,value}]}]}.

{input,10,
 {{xcobid, pdo1_tx, 16#20002}, 9, analog, []}, 
 [{output,[{channel,12},{target,x}]},
  {output,[{channel,10},{target,value}]}
 ]}.

%% activity display (from self!)
{input,21,{{xcobid,pdo1_tx,self},  1, output_active, []}, 
 [{output,[{channel,21},{target,color}]}]}.
{input,22,{{xcobid,pdo1_tx,self},  2, output_active, []}, 
 [{output,[{channel,22},{target,color}]}]}.

{input,23,{{xcobid, pdo1_tx,self}, 3, output_active, []},
 [{output,[{channel,23},{target,color}]}]}. 
{input,24,{{xcobid, pdo1_tx,self}, 4, output_active, []}, 
 [{output,[{channel,24},{target,color}]} ]}. 

{output,1, [{feedback,true}],  {hex_debug, []}}.
{output,2, [{feedback,true}],  {hex_debug, []}}.
{output,3, [{feedback,true}],  {hex_debug, []}}.
{output,4, [{feedback,true}],  {hex_debug, []}}.
{output,5, [{transmit,true},{repeat,4},{sustain,300},{wait,100}],
 [{"ena", {hex_debug, []}},
  {"ena", {hex_script,
	   [{command,[{os,"darwin"},
		      {cmdline,"afplay $/hex//priv/alarm.wav"}]},
	    {command,[{os,"linux"},
		      {cmdline,"paplay $/hex//priv/alarm.wav"}]}
	   ]}}]}.

{output, 6, [],  {hex_debug, []}}.
{output, 7, [{target,[{name,f1}]},
	     {target,[{name,f2}]},
	     {target,[{name,f3}]},
	     {target,[{name,f4}]},
	     {enable, "(f1 and f2) or (f3 and f4)"},
	     %% fixme: default disable_expr to !enable somehow...
	     {disable, "not ((f1 and f2) or (f3 and f4))"},
	     {repeat,2},
	     {wait,2000}
	    ],
 [
  {"ena", 
   {hex_script,
    [
     {command,[{os,"darwin"},
	       {cmdline,"afplay $/hex//priv/bark.wav"}]},
     {command,[{os,"linux"},
	       {cmdline,"paplay $/hex//priv/bark.wav"}]}
    ]}}
  ]}.


{output,8, [],  {hex_debug, []}}.

{output,10, [{transmit,true},
	      {enable,"true"},
	      {target,[{name,value},{expr,"map(value,0,30,10,310)"}]}],
 [{"true",
   {hex_epx, [{id,amp},{type,value},
	      {x,26},{y,150},{width,132},{height,48},
	      {font,[{name,"Arial"},{size,40}]},{format,"~w A"}]}}
 ]}.

{output,11, [{enable,"true"}],
 [{"true", 
   {hex_epx, [{id,volt},{type,value},
	      {x,162},{y,150},{width,132},{height,48},
	      {font,[{name,"Arial"},{size,40}]},{format,"~w V"}]}}
 ]}.

{output,12, [{enable,"true"},
	      {target,[{name,x},{expr,"map(x,0,30,10,310)"}]}],
 [{"true",
   {hex_epx, [{id,rect},{type,rectangle},
	      {x,10}, {y,2}, {width,10}, {height,2},
	      {fill, solid}, {color, 16#ff000000}]}}
 ]}.

{output,13, [{inhibit, 5000}], {hex_debug, []}}.

{output,17, [{repeat,-1},{sustain,100},{wait,900}],
 [{"ena", 
   {hex_script,
    [{command,[{os,"darwin"},
	       {cmdline,"afplay $/hex//priv/bark.wav"}]},
     {command,[{os,"linux"},
	       {cmdline,"paplay $/hex//priv/bark.wav"}]}
    ]}}
 ]}.

%% put activity symbol ontop of b1 (maybe update a state instead?)
{output, 21, [{enable,"true"},
	      {target,[{name,color},
		       {expr,"map(color,0,1,16#00000000,16#ff00ff00)"}]}],
 [{"true",
   {hex_epx, [{id,a_b1},{type,rectangle},
	      {x,24},{y,10},{width,2},{height,64},{fill,blend},
	      {color, 16#00000000}]}}
 ]}.

{output, 22,  [{enable,"true"},
	       {target,[{name,color},
			{expr,"map(color,0,1,16#00000000,16#ff00ff00)"}]}],
 [{"true", 
   {hex_epx, [{id,a_b2},{type,rectangle},
	      {x,92},{y,10},{width,2},{height,64},{fill,blend},
	      {color, 16#00000000}]}}
 ]}.

{output, 23, [{enable,"true"},
	       {target,[{name,color},
			{expr,"map(color,0,1,16#00000000,16#ff00ff00)"}]}],
 [{"true", 
   {hex_epx, [{id,a_b3},{type,rectangle},
	      {x,160},{y,10},{width,2},{height,64},{fill,blend},
	      {color, 16#00000000}]}}
 ]}.

{output, 24, [{enable,"true"},
	      {target,[{name,color},
		       {expr,"map(color,0,1,16#00000000,16#ff00ff00)"}]}],
 [{"true",
   {hex_epx, [{id,a_b4},{type,rectangle},
	      {x,228},{y,10},{width,2},{height,64},{fill,blend},
	      {color, 16#00000000}]}}
 ]}.
